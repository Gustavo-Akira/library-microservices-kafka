version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - ms-library

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - ms-library
    depends_on:
      - zookeeper
  db:
    image: postgres:15
    container_name: postgres_db
    environment:
      POSTGRES_USER: library-user
      POSTGRES_PASSWORD: library123
      POSTGRES_DB: library-user
    networks:
      - ms-library
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data

  db_notification:
    image: postgres:15
    container_name: postgres_notification_db
    environment:
      POSTGRES_USER: library-notification
      POSTGRES_PASSWORD: library123
      POSTGRES_DB: library-notification
    networks:
      - ms-library
    ports:
      - "5433:5432"
    volumes:
      - db_notification_data:/var/lib/postgresql/data
  db_author:
    image: postgres:15
    container_name: postgres_author_db
    environment:
      POSTGRES_USER: library-author
      POSTGRES_PASSWORD: library123
      POSTGRES_DB: library-author
    networks:
      - ms-library
    ports:
      - "5434:5432"
    volumes:
      - db_author_data:/var/lib/postgresql/data

  app:
    image: akira2002/library-user
    build:
      context: /users/
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    networks:
      - ms-library
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_DATABASE_URL: jdbc:postgresql://db:5432/library-user
      DATABASE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
      SPRING_DATABASE_USERNAME: library-user
      SPRING_DATABASE_PASSWORD: library123
      SPRING_PROFILES_ACTIVE: dev
    depends_on:
      - kafka
      - db
  notification_app:
    image: akira2002/library-notification
    build:
      context: /notification/
      dockerfile: Dockerfile
    ports:
      - "8082:8080"
    networks:
      - ms-library
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_DATABASE_URL: jdbc:postgresql://db_notification:5432/library-notification
      DATABASE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
      SPRING_DATABASE_USERNAME: library-notification
      SPRING_DATABASE_PASSWORD: library123
      SPRING_PROFILES_ACTIVE: dev
    secrets:
      - username_send_email
      - password_send_email
    depends_on:
      - kafka
      - db_notification
  author_app:
    image: akira2002/library-author
    build:
      context: /author/
      dockerfile: Dockerfile
      ports:
        - "8083:8080"
      networks:
        - ms-library
      environment:
        SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
        SPRING_DATABASE_URL: jdbc:postgresql://db_author:5432/library-author
        DATABASE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
        SPRING_DATABASE_USERNAME: library-author
        SPRING_DATABASE_PASSWORD: library123
        SPRING_PROFILES_ACTIVE: dev
        CACHE_HOST: redis
        CACHE_PORT: 6379
        CACHE_PASSWORD: library-redis
      depends_on:
        - kafka
        - db_author
        - redis
  eureka-server:
    image: eureka-server:latest
    build:
      context: /eureka-server/
      dockerfile: Dockerfile
    ports:
      - "8070:8070"
    networks:
      - ms-library
    depends_on:
      - app
  gateway:
    image: akira2002/gateway-library
    build:
      context: /gatewayserver/
      dockerfile: Dockerfile
    ports:
      - "8072:8072"
    networks:
      - ms-library
    depends_on:
      - app
      - eureka-server
  redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    environment:
      REDIS_PASSWORD: library-redis
      REDIS_PORT: 6379
      REDIS_DATABASES: 16

volumes:
  db_data:
    driver: local
  db_notification_data:
    driver: local
  db_author_data:
    driver: local

networks:  
  ms-library:  
    name: ms-library  
    driver: bridge

secrets:
  username_send_email:
    enviroment: EMAIL_USER
  password_send_email:
    enviroment: EMAIL_PASSWORD